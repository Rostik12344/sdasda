import wmi
import platform
import psutil
import subprocess 
import re
import socket
import screeninfo
from screeninfo import get_monitors



c = wmi.WMI()
my_system = c.Win32_ComputerSystem()[0]
print(f"Manufacturer: {my_system.Manufacturer}")
print(f"Model: {my_system.Model}")
print(f"Name: {my_system.Name}")
print(f"NumberOfProcessors: {my_system.NumberOfProcessors}")
print(f"SystemType: {my_system.SystemType}")
print(f"SystemFamily: {my_system.SystemFamily}")

system_info = platform.uname()
print(f"System:", system_info.system)
print(f"Node Name:", system_info.node)
print(f"Release:", system_info.release)
print(f"Version:", system_info.version)
print(f"Machine:", system_info.machine)
print(f"Processor:", system_info.processor)

user = platform.uname().node
print(f"User:", user)

memory_info = psutil.virtual_memory()
print("\nMemory Info:")
print("Total:", memory_info.total)
print("Available:", memory_info.available)
print("Used:", memory_info.used)
print("Free:", memory_info.free)
print("Percentage:", memory_info.percent)

disk_info = psutil.disk_usage('/')
print("\nDisk Info:")
print("Total:", disk_info.total)
print("Used:", disk_info.used)
print("Free:", disk_info.free)
print("Percentage:", disk_info.percent)

battery_info = psutil.sensors_battery()
print("\nBattery Info:")
if battery_info:
    percent = battery_info.percent
    print(f"Percentage: {percent}%")
    plugged = battery_info.power_plugged
    print(f"Plugged in: {plugged}")
    
process_info = psutil.process_iter()
print("\nRunning Processes:")
for process in process_info:
    print(f"\nProcess ID: {process.pid}")
    print(f"Name: {process.name()}")


w = wmi.WMI()
for p in w.Win32_Product():
    if p.Version is not None:        
        print(f"Version: {p.Version}")
    print(f"Vendor: {p.Vendor}")    
    (f"Caption: {p.Caption}")
    print("\nhline")
    
def get_tcpip_config():  
    interfaces = psutil.net_if_addrs() 

    for interface, addresses in interfaces.items(): 
        print(f"Interface: {interface}") 
 
        for address in addresses: 
            if address.family == socket.AF_INET: 
                print(f"  IPv4 Address: {address.address}") 
                print(f"  Netmask: {address.netmask}") 
                print(f"  Broadcast IP: {address.broadcast}") 
            elif address.family == socket.AF_INET6: 
                print(f"  IPv6 Address: {address.address}") 
                print(f"  Netmask: {address.netmask}") 
 

get_tcpip_config()
 

for m in get_monitors():
    print(str(m))


